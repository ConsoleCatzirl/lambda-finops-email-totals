AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Yaml template to stop AWS Services like RDS, Aurora, EKS in scheduled interval

Parameters:

#general params
  ScheduleExpression:
    Type: String
    Description: Schedule expressions using cron
    Default: cron(30 10 2 * ? *)

  SenderEmail:
    Type: String
    Description: Sender Email Address
    Default: it@sagebase.org

  RestrictRecipients:
    Type: String
    Description: Whether or not to restict sending emails to approved addresses
    Default: "True"
    AllowedValues:
      - "True"
      - "False"

  ApprovedRecipients:
    Type: String
    Description: Comma-separated list of approved email recipients
    Default: ''

  MinimumValue:
    Type: String
    Description: 'Minimum total to send an email. Default: $1.0'
    Default: '1.0'
    AllowedPattern: '^\d+(\.\d+)?$'
    ConstraintDescription: 'must be a floating point number'


Resources:
#lambda execution role config
  MonthlyServicesUsageLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: 'LambdaSSMAssume'
            Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaAccess
          PolicyDocument:
            Statement:
            - Action: ["logs:DescribeLogStreams", "logs:CreateLogStream", "logs:PutLogEvents", "logs:CreateLogGroup"]
              Resource: "*"
              Effect: Allow
            - Action: ["ce:DescribeCostCategoryDefinition","ce:GetRightsizingRecommendation","ce:GetCostAndUsage", "ce:GetSavingsPlansUtilization","ce:GetAnomalies","ce:GetReservationPurchaseRecommendation","ce:ListCostCategoryDefinitions", "ce:GetCostForecast","ce:GetPreferences","ce:GetReservationUtilization","ce:GetCostCategories","ce:GetSavingsPlansPurchaseRecommendation", "ce:GetDimensionValues","ce:GetSavingsPlansUtilizationDetails","ce:GetAnomalySubscriptions","ce:GetCostAndUsageWithResources", "ce:DescribeReport","ce:GetReservationCoverage","ce:GetSavingsPlansCoverage","ce:GetAnomalyMonitors","ce:DescribeNotificationSubscription", "ce:GetTags","ce:GetUsageForecast","ce:GetCostAndUsage"]
              Resource: "*"
              Effect: Allow
            - Action: ["ses:*"]
              Resource: "*"
              Effect: Allow

#This Lambda Function will fetch Billing details for AWS linked Account and will send it over mail.
  MonthlyServicesUsage:
    Type: AWS::Serverless::Function
    Properties:
      Handler: email_totals/handler.lambda_handler
      CodeUri: .
      Runtime: python3.9
      MemorySize: 128
      Timeout: 90
      Role: !GetAtt MonthlyServicesUsageLambdaRole.Arn
      Environment:
        Variables:
          SENDER: !Ref SenderEmail
          RESTRICT: !Ref RestrictRecipients
          APPROVED: !Ref ApprovedRecipients
          MINIMUM: !Ref MinimumValue
      Events:
        ScheduledEventTrigger:
          Type: Schedule
          Properties:
            Schedule: !Ref ScheduleExpression

#Cloud Watch config
  MonthlyServicesUsageLogGroup:
      Type: "AWS::Logs::LogGroup"
      Properties:
        RetentionInDays: 90
        LogGroupName: !Join ["", ["/aws/lambda/", !Ref MonthlyServicesUsage]]

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref MonthlyServicesUsage
      Principal: 'events.amazonaws.com'
